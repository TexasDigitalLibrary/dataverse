package edu.harvard.iq.dataverse.authorization.providers.twofactor;

import edu.harvard.iq.dataverse.authorization.AuthenticatedUserDisplayInfo;
import edu.harvard.iq.dataverse.authorization.UserRecordIdentifier;

/**
 * Describes a single user on a remote IDP that uses OAuth2.
 * Normally generated by {@link AbstractOAuth2Idp}.
 * 
 * @author Nicholas
 */
public class TwoFactorUserRecord {
    
    private final String serviceId;
    
    /** An immutable value, probably a number. Not a username that may change. */
    private final String idInService;

    /** A potentially mutable String that is easier on the eye than a number. */
    private final String username;
    
    private final String accessToken;
    
    private final AuthenticatedUserDisplayInfo displayInfo;

    public TwoFactorUserRecord(String aServiceId, String anIdInService, String aUsername, String anAccessToken,  AuthenticatedUserDisplayInfo aDisplayInfo) {
        serviceId = aServiceId;
        idInService = anIdInService;
        username = aUsername;
        accessToken = anAccessToken;
        displayInfo = aDisplayInfo;
    }

    public String getServiceId() {
        return serviceId;
    }

    public String getIdInService() {
        return idInService;
    }

    public String getUsername() {
        return username;
    }

    public String getAccessToken() {
        return accessToken;
    }

    public AuthenticatedUserDisplayInfo getDisplayInfo() {
        return displayInfo;
    }

    @Override
    public String toString() {
        return "TwoFactorUserRecord{" + "serviceId=" + serviceId + ", idInService=" + idInService + '}';
    }
    
    public UserRecordIdentifier getUserRecordIdentifier() {
        return new UserRecordIdentifier(serviceId, idInService);
    }
}